@page "/employees"
@using EmployeeManagement.Models
@using EmployeeManagement.Services
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.JSInterop
@inject IEmployeeService EmployeeService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<h3>Employees</h3>

<NavLink class="btn btn-primary mb-2" href="/add">Add Employee</NavLink>

@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else if (!employees.Any())
{
    <p>No employees found.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>DOB</th>
                <th>Position</th>
                <th>Salary</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in employees)
            {
                <tr>
                    <td>@emp.FirstName @emp.LastName</td>
                    <td>@emp.Email</td>
                    <td>@emp.DateOfBirth.ToShortDateString()</td>
                    <td>@emp.Position</td>
                    <td>@emp.Salary</td>
                    <td>
                        <NavLink class="btn btn-sm btn-warning me-1" href="@($"/edit/{emp.Id}")">Edit</NavLink>
                        <button class="btn btn-sm btn-danger" @onclick="(() => DeleteEmployee(emp.Id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<EmployeeDto>? employees;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            employees = await EmployeeService.GetAllAsync();
        }
        catch
        {
            Navigation.NavigateTo("/login");
        }
    }

    private async Task DeleteEmployee(int id)
    {
        Console.WriteLine($"Delete clicked: {id}");
        var success = await EmployeeService.DeleteAsync(id);
        if (success)
        {
            employees = await EmployeeService.GetAllAsync();
        }
    }

}
